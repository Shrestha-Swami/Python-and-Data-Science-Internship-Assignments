select * from sales;
+-------------+------------+------------+
| customer_id | order_date | product_id |
+-------------+------------+------------+
| A           | 2021-01-01 |          1 |
| A           | 2021-01-01 |          2 |
| A           | 2021-01-07 |          2 |
| A           | 2021-01-10 |          3 |
| A           | 2021-01-11 |          3 |
| A           | 2021-01-11 |          3 |
| B           | 2021-01-01 |          2 |
| B           | 2021-01-02 |          2 |
| B           | 2021-01-04 |          1 |
| B           | 2021-01-11 |          1 |
| B           | 2021-01-16 |          3 |
| B           | 2021-02-01 |          3 |
| C           | 2021-01-01 |          3 |
| C           | 2021-01-01 |          3 |
| C           | 2021-01-07 |          3 |
+-------------+------------+------------+

 select * from menu;
+------------+--------------+-------+
| product_id | product_name | price |
+------------+--------------+-------+
|          1 | sushi        |    10 |
|          2 | curry        |    15 |
|          3 | ramen        |    12 |
+------------+--------------+-------+

 select * from members;
+-------------+------------+
| customer_id | join_date  |
+-------------+------------+
| A           | 2021-01-07 |
| B           | 2021-01-09 |
+-------------+------------+

1)  What is the total amount each customer spent at the restaurant?
SELECT s.customer_id, SUM(m.price) as total_amount_spent
FROM sales s
JOIN menu m on s.product_id = m.product_id
GROUP BY s.customer_id;

+-------------+--------------------+
| customer_id | total_amount_spent |
+-------------+--------------------+
| A           |                 76 |
| B           |                 74 |
| C           |                 36 |
+-------------+--------------------+

2)  How many days has each customer visited the restaurant?
 SELECT customer_id, count(DISTINCT order_date) as days_visited
 from sales
 GROUP BY customer_id;

+-------------+--------------+
| customer_id | days_visited |
+-------------+--------------+
| A           |            4 |
| B           |            6 |
| C           |            2 |
+-------------+--------------+

3)  What was the first item from the menu purchased by each customer?
SELECT DISTINCT s.customer_id, m.product_name, s.order_date
FROM sales s
JOIN menu m ON s.product_id = m.product_id
WHERE s.order_date = (
SELECT MIN(order_date)
FROM sales
WHERE customer_id = s.customer_id
);

+-------------+--------------+------------+
| customer_id | product_name | order_date |
+-------------+--------------+------------+
| A           | sushi        | 2021-01-01 |
| A           | curry        | 2021-01-01 |
| B           | curry        | 2021-01-01 |
| C           | ramen        | 2021-01-01 |
+-------------+--------------+------------+

4) What is the most purchased item on the menu and how many times was it purchased by all customer?
 SELECT m.product_name, X.total_purchases
 FROM (
 SELECT product_id, COUNT(*) AS total_purchases
 FROM sales GROUP BY product_id) AS X
 JOIN menu m ON X.product_id = m.product_id
 WHERE
 X.total_purchases = (
 SELECT MAX(total_purchases) FROM (SELECT COUNT(*) AS total_purchases FROM sales GROUP BY product_id) AS Y
 );

+--------------+-----------------+
| product_name | total_purchases |
+--------------+-----------------+
| ramen        |               8 |
+--------------+-----------------+

5) Which item was the most popular for each customer?
 SELECT c.customer_id, m.product_name, c.purchase_count
 FROM
 ( SELECT customer_id, product_id, COUNT(*) AS purchase_count FROM sales GROUP BY customer_id, product_id) AS c
 JOIN menu m ON c.product_id = m.product_id
 WHERE c.purchase_count = (
 SELECT MAX(purchase_count) FROM (
 SELECT customer_id, product_id, COUNT(*) AS purchase_count FROM sales
 WHERE customer_id = c.customer_id GROUP BY customer_id, product_id ) AS Y
 )
 ORDER BY c.customer_id;

+-------------+--------------+----------------+
| customer_id | product_name | purchase_count |
+-------------+--------------+----------------+
| A           | ramen        |              3 |
| B           | sushi        |              2 |
| B           | curry        |              2 |
| B           | ramen        |              2 |
| C           | ramen        |              3 |
+-------------+--------------+----------------+

6) Which item was purchased first by the customer after they became a member?
SELECT s.customer_id, menu.product_name
FROM sales s
JOIN members m ON s.customer_id = m.customer_id
JOIN menu ON s.product_id = menu.product_id
WHERE s.order_date >= m.join_date
AND s.order_date = (SELECT MIN(order_date) FROM sales WHERE customer_id = s.customer_id AND order_date >= m.join_date)
ORDER BY s.customer_id;

+-------------+--------------+
| customer_id | product_name |
+-------------+--------------+
| A           | curry        |
| B           | sushi        |
+-------------+--------------+

7) Which item was purchased just before the customer became a member?
SELECT s.customer_id, menu.product_name
FROM sales s
JOIN members m ON s.customer_id = m.customer_id
JOIN menu ON s.product_id = menu.product_id
WHERE s.order_date < m.join_date
AND s.order_date = (SELECT MAX(order_date) FROM sales WHERE customer_id = s.customer_id AND order_date < m.join_date )
ORDER BY s.customer_id;
+-------------+--------------+
| customer_id | product_name |
+-------------+--------------+
| A           | sushi        |
| A           | curry        |
| B           | sushi        |
+-------------+--------------+

8) What is the total items and amount spent for each member before they became a member?
SELECT s.customer_id, COUNT(*) AS total_items, SUM(menu.price) AS total_amount
FROM sales s
JOIN members m ON s.customer_id = m.customer_id
JOIN menu ON s.product_id = menu.product_id
WHERE s.order_date < m.join_date
GROUP BY s.customer_id
ORDER BY s.customer_id;

+-------------+-------------+--------------+
| customer_id | total_items | total_amount |
+-------------+-------------+--------------+
| A           |           2 |           25 |
| B           |           3 |           40 |
+-------------+-------------+--------------+

9) If each $1 spent equates to 10 points and sushi has 2x points multiplier - how many points would each customer have?
SELECT s.customer_id, 
SUM(m.price * 10 * (1 + (m.product_name = 'sushi'))) AS total_points
FROM sales s
JOIN menu m ON s.product_id = m.product_id
GROUP BY s.customer_id;

+-------------+--------------+
| customer_id | total_points |
+-------------+--------------+
| A           |          860 |
| B           |          940 |
| C           |          360 |
+-------------+--------------+

10) In the first week after a customer joins a program(including their join date) they earn 2x points on all the items, not just sushi - how many points do customer 
    A and B have at the end of January?
 
SELECT s.customer_id,
SUM(m.price * 10 * ((s.order_date BETWEEN mem.join_date AND DATE_ADD(mem.join_date, INTERVAL 6 DAY)) * 2 + (s.order_date NOT BETWEEN mem.join_date AND DATE_ADD(mem.join_date, INTERVAL 6 DAY)) * (1 + (m.product_name = 'sushi')))) AS total_points
FROM sales s
JOIN members mem ON s.customer_id = mem.customer_id
JOIN menu m ON s.product_id = m.product_id
WHERE s.order_date <= '2021-01-31' AND s.customer_id IN ('A', 'B')
GROUP BY s.customer_id
ORDER BY s.customer_id;
+-------------+--------------+
| customer_id | total_points |
+-------------+--------------+
| A           |         1370 |
| B           |          820 |
+-------------+--------------+

